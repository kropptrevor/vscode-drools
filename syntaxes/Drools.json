{
    "fileTypes": [
        ".drl"
    ],
    "name": "Drools",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#stringLiteral"
        },
        {
            "include": "#package"
        },
        {
            "include": "#import"
        },
        {
            "include": "#function"
        },
        {
            "include": "#query"
        },
        {
            "include": "#declare"
        },
        {
            "include": "#global"
        },
        {
            "include": "#ruleBeginning"
        },
        {
            "include": "#ruleLHS"
        },
        {
            "include": "#ruleRHS"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.drools"
                },
                {
                    "begin": "//",
                    "end": "$",
                    "name": "comment.line.double-slash.drools"
                }
            ]
        },
        "stringLiteral": {
            "begin": "\"",
            "end": "\"",
            "name": "string.quoted.double.drools",
            "patterns": [
                {
                    "match": "\\\\[\\\\\"ntbr]"
                }
            ]
        },
        "package": {
            "begin": "^\\s*package\\b",
            "end": ";|$",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.package.drools"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "name": "meta.package.drools",
            "patterns": [
                {
                    "include": "#packageClassName"
                }
            ]
        },
        "packageClassName": {
            "begin": "(?<=package\\s|[\\w$]\\.)([a-zA-Z_$][\\w$]*)+(\\.)?",
            "end": "(?=[^\\w$])",
            "beginCaptures": {
                "0": {
                    "name": "storage.modifier.package.java"
                },
                "2": {
                    "name": "punctuation.separator.drools"
                }
            },
            "patterns": [
                {
                    "include": "#packageClassName"
                }
            ]
        },
        "import": {
            "begin": "^\\s*import(\\s*function)?\\b",
            "end": ";|$",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.import.drools"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "name": "meta.import.drools",
            "patterns": [
                {
                    "include": "#importClassName"
                },
                {
                    "include": "#importDots"
                }
            ]
        },
        "importClassName": {
            "begin": "(?<=import\\s|function\\s|[\\w$]\\.)([a-zA-Z_$][\\w$]*|\\*)+(\\.)?(\\*)?",
            "end": "(?=[^\\w$*])",
            "beginCaptures": {
                "0": {
                    "name": "storage.modifier.import.java"
                },
                "2": {
                    "name": "punctuation.separator.drools"
                },
                "3": {
                    "name": "variable.language.wildcard.drools"
                }
            },
            "patterns": [
                {
                    "include": "#importClassName"
                }
            ]
        },
        "function": {
            "begin": "^\\s*(function)\\b",
            "end": "(?:^\\n|(?<=})\\n)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.function.drools"
                }
            },
            "patterns": [
                {
                    "begin": "(?<=[^\\w]function|^function)\\s*",
                    "end": "(?<=[\\w$>])(?=\\s)",
                    "patterns": [
                        {
                            "include": "#javaType"
                        }
                    ]
                },
                {
                    "begin": "{",
                    "end": "}",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.method.begin.bracket.curly.java"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.method.end.bracket.curly.java"
                        }
                    },
                    "contentName": "meta.embedded.block.java",
                    "patterns": [
                        {
                            "include": "source.java"
                        }
                    ]
                },
                {
                    "begin": "\\(",
                    "end": "\\)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.parameters.begin.bracket.round.java"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.parameters.end.bracket.round.java"
                        }
                    },
                    "patterns": [
                        {
                            "begin": "(?<=\\(|,)",
                            "end": ",|(?=\\))",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.separator.delimiter.java"
                                }
                            },
                            "patterns": [
                                {
                                    "begin": "(?<=\\(|,)",
                                    "end": "(?<=\\w)(?=\\s)",
                                    "patterns": [
                                        {
                                            "match": "\\b[a-zA-Z_$][\\w$]*\\b",
                                            "name": "storage.type.java"
                                        }
                                    ]
                                },
                                {
                                    "begin": "(?<=\\w)",
                                    "end": "(?=,|\\))",
                                    "patterns": [
                                        {
                                            "match": "\\b[a-zA-Z_$][\\w$]*\\b",
                                            "name": "variable.parameter.java"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=[\\w$>])",
                    "end": "(?=\\()",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.bracket.round.drools"
                        }
                    },
                    "patterns": [
                        {
                            "match": "\\b[a-zA-Z_$][\\w$]*\\b",
                            "name": "entity.name.function.java"
                        }
                    ]
                }
            ]
        },
        "javaType": {
            "patterns": [
                {
                    "include": "#javaParameterized"
                },
                {
                    "match": "\\b[a-zA-Z_$.][\\w$.]*\\b",
                    "name": "storage.type.primitive.java"
                }
            ]
        },
        "javaParameterized": {
            "begin": "<",
            "end": ">",
            "patterns": [
                {
                    "include": "#javaParameterized"
                },
                {
                    "match": "\\b[a-zA-Z_$.][\\w$.]*\\b",
                    "name": "storage.type.primitive.java"
                }
            ]
        },
        "query": {
            "begin": "^\\s*(query)\\b",
            "end": "\\b(end)(?:\\s*(;)?|\\b)",
            "name": "meta.query.drools",
            "captures": {
                "1": {
                    "name": "keyword.control.query.drools"
                },
                "2": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "patterns": [
                {
                    "begin": "(?<=[^\\w]query|^query)(?![^\\s])",
                    "end": "(?<=\\)|\")",
                    "patterns": [
                        {
                            "include": "#stringLiteral"
                        },
                        {
                            "begin": "\\(",
                            "end": "\\)",
                            "captures": {
                                "0": {
                                    "name": "punctuation.bracket.round.drools"
                                }
                            },
                            "patterns": [
                                {
                                    "begin": "(?<=\\()|(,)",
                                    "end": "(?<=\\w)(?=\\W)",
                                    "beginCaptures": {
                                        "1": {
                                            "name": "punctuation.separator.delimiter.drools"
                                        }
                                    },
                                    "patterns": [
                                        {
                                            "match": "(?<=\\W|^)[a-zA-Z_$]\\w*\\b",
                                            "name": "storage.type.java"
                                        }
                                    ]
                                },
                                {
                                    "begin": "(?<=\\w)(?=\\W)",
                                    "end": "(?=\\)|,)",
                                    "patterns": [
                                        {
                                            "match": "(?<=\\W|^)[a-zA-Z_$]\\w*(?=\\W)",
                                            "name": "variable.parameter.drools"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "begin": "(?<=\\s|^)(?=[\\w])",
                            "end": "(?:(?<=\\w)\\s)|(?=\\()",
                            "patterns": [
                                {
                                    "match": "(?<=\\W|^)[a-zA-Z_$]\\w*(?=\\W)",
                                    "name": "entity.name.function.drools"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=\\)|\")",
                    "end": "(?=\\bend\\b)",
                    "patterns": [
                        {
                            "include": "#stringLiteral"
                        },
                        {
                            "include": "#lhsKeywords"
                        },
                        {
                            "include": "#lhsObject"
                        },
                        {
                            "include": "#lhsIdent"
                        },
                        {
                            "match": "#[a-zA-Z$_][\\w$]*",
                            "name": "keyword.control.rule.drools"
                        },
                        {
                            "match": "\\(|\\)",
                            "name": "punctuation.bracket.round.drools"
                        },
                        {
                            "include": "#oopExpr"
                        },
                        {
                            "include": "#oopConstraint"
                        },
                        {
                            "include": "source.java"
                        }
                    ]
                }
            ]
        },
        "declare": {
            "begin": "^\\s*(declare)\\b",
            "end": "\\b(end)(?:\\s*(;)?|\\b)",
            "name": "meta.declare.drools",
            "captures": {
                "1": {
                    "name": "keyword.control.declare.drools"
                },
                "2": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "patterns": [
                {
                    "begin": "(?<=\\sdeclare|^declare)\\s",
                    "end": "$|(?=end[\\s])",
                    "patterns": [
                        {
                            "match": "(?<=\\s|^)enum(?=\\s)",
                            "name": "storage.modifier.drools"
                        },
                        {
                            "match": "(?<=\\s|^)extends(?=\\s)",
                            "name": "storage.modifier.drools"
                        },
                        {
                            "match": "(?<=\\s|^)[a-zA-Z$_][\\w$]*(?=\\s)",
                            "name": "storage.type.java"
                        }
                    ]
                },
                {
                    "begin": "(?=@)",
                    "end": "(?<=\\))|(?<=\\w)(?=\\s)",
                    "patterns": [
                        {
                            "match": "(@)([a-zA-Z$_]\\w*)(?=\\s|\\()",
                            "captures": {
                                "1": {
                                    "name": "punctuation.definition.annotation.drools"
                                },
                                "2": {
                                    "name": "storage.type.annotation.drools"
                                }
                            }
                        },
                        {
                            "begin": "\\(",
                            "end": "\\)",
                            "captures": {
                                "0": {
                                    "name": "punctuation.bracket.round.drools"
                                }
                            },
                            "patterns": [
                                {
                                    "match": "(?<=\\(|\\s)[^\\s\\)]+(?=\\)|\\s)",
                                    "name": "string.annotation.drools"
                                }
                            ]
                        }
                    ]
                },
                {
                    "match": "(?<=\\s|^)([a-zA-Z$_]\\w*)\\s*(:)\\s*([a-zA-Z$_]\\w*)(?=\\W)",
                    "captures": {
                        "1": {
                            "name": "variable.other.definition.drools"
                        },
                        "2": {
                            "name": "punctuation.definition.drools"
                        },
                        "3": {
                            "name": "storage.type.java"
                        }
                    }
                },
                {
                    "begin": "(?<=\\s|^|,)(?=[a-zA-Z$_])",
                    "end": ";",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.terminator.drools"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#stringLiteral"
                        },
                        {
                            "match": ",",
                            "name": "punctuation.separator.delimiter.drools"
                        },
                        {
                            "match": "(?<=\\s|,)[a-zA-Z$_]\\w*(?=\\s|\\(|,|;)",
                            "name": "constant.other.enum.drools"
                        }
                    ]
                }
            ]
        },
        "global": {
            "begin": "^\\s*global\\s",
            "end": "$|;",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.global.drools"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "patterns": [
                {
                    "begin": "(?<=\\s)",
                    "end": "(?=\\s)",
                    "patterns": [
                        {
                            "match": "(?:(?<=\\s)|(\\.))([a-zA-Z$_]\\w*)(?=\\.|\\s)",
                            "captures": {
                                "1": {
                                    "name": "punctuation.separator.delimiter.drools"
                                },
                                "2": {
                                    "name": "storage.modifier.import.java"
                                }
                            }
                        }
                    ]
                },
                {
                    "begin": "(?<=\\w)(?=\\s)",
                    "end": "$|(?=;)",
                    "name": "storage.type.java"
                }
            ]
        },
        "ruleBeginning": {
            "begin": "^\\s*rule\\s",
            "end": "(?=\\bwhen\\b|\\bthen\\b)",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.rule.drools"
                }
            },
            "name": "meta.rule.name.drools",
            "patterns": [
                {
                    "include": "#ruleName"
                },
                {
                    "include": "#ruleAttributes"
                }
            ]
        },
        "ruleName": {
            "begin": "(?<=rule\\s)",
            "end": "(?<=\")|(?:(?<=\\w)(?=[^\\w]))",
            "patterns": [
                {
                    "include": "#stringLiteral"
                },
                {
                    "match": "(?<=\\W|^)[a-zA-Z_$]\\w*(?=\\W)",
                    "name": "storage.type.java"
                }
            ]
        },
        "ruleAttributes": {
            "patterns": [
                {
                    "match": "\\b(attributes)\\s*:",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        }
                    }
                },
                {
                    "match": "\\b(duration|salience)\\s+(-?\\d+)(?:\\b|\\s*(,))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "constant.numeric.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                },
                {
                    "match": "\\b(agenda-group|activation-group|date-effective|date-expires|dialect|rulefow-group)\\s+(\"(?:[^\"]|\\\")*\")\\s*(,)?",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "string.quoted.double.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                },
                {
                    "match": "\\b(enabled)(?:\\s+(true|false))(?:\\b|\\s*(,))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "constant.language.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                },
                {
                    "match": "\\b(auto-focus|lock-on-active|no-loop)(?:\\s+(true|false))?(?:\\b|\\s*(,))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "constant.language.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                }
            ]
        },
        "ruleLHS": {
            "begin": "\\b(when)(\\s*:|\\b)",
            "end": "(?=\\bthen\\b)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.rule.drools"
                },
                "2": {
                    "name": "punctuation.definition.drools"
                }
            },
            "name": "meta.rule.lhs.drools",
            "patterns": [
                {
                    "include": "#lhsKeywords"
                },
                {
                    "include": "#lhsObject"
                },
                {
                    "include": "#lhsIdent"
                },
                {
                    "match": "#[a-zA-Z$_][\\w$]*",
                    "name": "keyword.control.rule.drools"
                },
                {
                    "match": ":=|:",
                    "name": "keyword.operator.assignment.drools"
                },
                {
                    "match": "\\(|\\)",
                    "name": "punctuation.bracket.round.drools"
                },
                {
                    "include": "#oopExpr"
                },
                {
                    "include": "#oopConstraint"
                },
                {
                    "include": "source.java"
                }
            ]
        },
        "lhsKeywords": {
            "match": "\\b(exists|not|eval|forall|collect|accumulate|from|and|or|matches|not matches|contains|not contains|memberOf|not memberOf|soundslike|str|in|notin|after|before|coincides|during|includes|finishes|finishedby|meets|metby|overlaps|overlappedby|starts|startedby)\\b",
            "name": "keyword.control.lhs.drools"
        },
        "lhsObject": {
            "match": "(?<![\\w\\?])(\\?)?([a-zA-Z][\\w$]*)\\s*(\\()",
            "captures": {
                "1": {
                    "name": "keyword.operator.misc.drools"
                },
                "2": {
                    "name": "storage.type.java"
                },
                "3": {
                    "name": "punctuation.bracket.round.drools"
                }
            }
        },
        "lhsIdent": {
            "patterns": [
                {
                    "match": "(?<=[^\\w$])([a-zA-Z_$][\\w$]*)\\s*(:=|:)",
                    "captures": {
                        "1": {
                            "name": "variable.other.definition.drools"
                        },
                        "2": {
                            "name": "keyword.operator.assignment.drools"
                        }
                    }
                },
                {
                    "match": "(?<=\\(|,|;)\\s*([a-zA-Z_$][\\w$]*)\\s*(?=\\)|,|;)",
                    "captures": {
                        "1": {
                            "name": "variable.other.definition.drools"
                        }
                    }
                }
            ]
        },
        "oopExpr": {
            "match": "((?:\\?/|/?\\.\\./|/)[a-zA-Z_$][\\w$]*)(#[a-zA-Z$_][\\w$]*)?(\\.)?",
            "captures": {
                "1": {
                    "name": "string.regexp.path.drools"
                },
                "2": {
                    "name": "storage.type.java"
                },
                "3": {
                    "name": "string.regexp.path.drools"
                }
            }
        },
        "oopConstraint": {
            "match": "(?:(?<=[\\w$])(\\[))|(\\])",
            "captures": {
                "1": {
                    "name": "punctuation.bracket.square.drools"
                },
                "2": {
                    "name": "punctuation.bracket.square.drools"
                }
            }
        },
        "ruleRHS": {
            "begin": "\\b(then)\\b",
            "end": "\\b(end)(?:\\s*(;)?|\\b)",
            "captures": {
                "1": {
                    "name": "keyword.control.rule.drools"
                },
                "2": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "name": "meta.rule.rhs.drools",
            "contentName": "meta.embedded.block.java",
            "patterns": [
                {
                    "include": "#rhsModify"
                },
                {
                    "include": "#rhsUpdate"
                },
                {
                    "include": "#rhsInsert"
                },
                {
                    "include": "#rhsDelete"
                },
                {
                    "include": "source.java"
                }
            ]
        },
        "rhsModify": {
            "begin": "\\b(modify)(?=\\s*\\(\\s*[a-zA-Z_$][\\w$]*\\s*\\)\\s*\\{)",
            "end": "\\}",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.rhs.drools"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.bracket.curly.drools"
                }
            },
            "patterns": [
                {
                    "match": "(?<=modify)\\s*(\\()\\s*([a-zA-Z_$][\\w$]*)\\s*(\\))\\s*(\\{)",
                    "captures": {
                        "1": {
                            "name": "punctuation.bracket.round.drools"
                        },
                        "2": {
                            "name": "variable.other.drools"
                        },
                        "3": {
                            "name": "punctuation.bracket.round.drools"
                        },
                        "4": {
                            "name": "punctuation.bracket.curly.drools"
                        }
                    }
                },
                {
                    "include": "#modifyExpression"
                }
            ]
        },
        "modifyExpression": {
            "begin": "\\s*(set[A-Z][\\w_$]*)\\s*(\\()([^\\)]*)(\\))(,)?",
            "end": "(?=\\})",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.drools"
                },
                "2": {
                    "name": "punctuation.bracket.round.drools"
                },
                "3": {
                    "patterns": [
                        {
                            "include": "source.java"
                        }
                    ]
                },
                "4": {
                    "name": "punctuation.bracket.round.drools"
                },
                "5": {
                    "name": "punctuation.separator.delimiter.drools"
                }
            },
            "patterns": [
                {
                    "include": "#modifyExpression"
                }
            ]
        },
        "rhsUpdate": {
            "match": "\\b(update)\\s*(\\()(\\s*[a-zA-Z_$][\\w$]*\\s*)(\\))\\s*(;)",
            "captures": {
                "1": {
                    "name": "keyword.control.rhs.drools"
                },
                "2": {
                    "name": "punctuation.bracket.round.drools"
                },
                "3": {
                    "name": "variable.other.drools"
                },
                "4": {
                    "name": "punctuation.bracket.round.drools"
                },
                "5": {
                    "name": "punctuation.terminator.drools"
                }
            }
        },
        "rhsInsert": {
            "match": "\\b(insert(?:Logical)?)\\s*(\\()\\s*(new)\\s+([a-zA-Z_$][\\w$]*)\\s*(\\()(.*)(\\))\\s*(\\))\\s*(;)",
            "captures": {
                "1": {
                    "name": "keyword.control.rhs.drools"
                },
                "2": {
                    "name": "punctuation.bracket.round.drools"
                },
                "3": {
                    "name": "keyword.control.new.java"
                },
                "4": {
                    "name": "entity.name.function.java"
                },
                "5": {
                    "name": "punctuation.bracket.round.drools"
                },
                "6": {
                    "patterns": [
                        {
                            "include": "source.java"
                        }
                    ]
                },
                "7": {
                    "name": "punctuation.bracket.round.drools"
                },
                "8": {
                    "name": "punctuation.bracket.round.drools"
                },
                "9": {
                    "name": "punctuation.terminator.drools"
                }
            }
        },
        "rhsDelete": {
            "match": "\\b(delete)\\s*(\\()\\s*([a-zA-Z_$][\\w$]*)\\s*(\\))\\s*(;)",
            "captures": {
                "1": {
                    "name": "keyword.control.rhs.drools"
                },
                "2": {
                    "name": "punctuation.bracket.round.drools"
                },
                "3": {
                    "name": "variable.other.drools"
                },
                "4": {
                    "name": "punctuation.bracket.round.drools"
                },
                "5": {
                    "name": "punctuation.terminator.drools"
                }
            }
        }
    },
    "scopeName": "source.drools",
    "uuid": "a98fc7cc-15d1-401e-bb85-e72714276cdb"
}