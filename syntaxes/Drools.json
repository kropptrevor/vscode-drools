{
    "fileTypes": [
        ".drl"
    ],
    "name": "Drools",
    "patterns": [
        {
            "include": "#package"
        },
        {
            "include": "#import"
        },
        {
            "include": "#ruleBeginning"
        },
        {
            "include": "#ruleLHS"
        },
        {
            "include": "#ruleRHS"
        },
        {
            "include": "#strings"
        }
    ],
    "repository": {
        "strings": {
            "match": "(\"([^\"]|\"\")*\")",
            "name": "string.quoted.double.drools"
        },
        "package": {
            "begin": "^\\s*package\\b",
            "end": ";|$",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.package.drools"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "name": "meta.package.drools",
            "patterns": [
                {
                    "include": "#packageClassName"
                }
            ]
        },
        "packageClassName": {
            "begin": "(?<=package\\s|[\\w$]\\.)([a-zA-Z_$][\\w$]*)+(\\.)?",
            "end": "(?=[^\\w$])",
            "beginCaptures": {
                "0": {
                    "name": "storage.modifier.package.java"
                },
                "2": {
                    "name": "punctuation.separator.drools"
                }
            },
            "patterns": [
                {
                    "include": "#packageClassName"
                }
            ]
        },
        "import": {
            "begin": "^\\s*import(\\s*function)?\\b",
            "end": ";|$",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.import.drools"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.terminator.drools"
                }
            },
            "name": "meta.import.drools",
            "patterns": [
                {
                    "include": "#importClassName"
                },
                {
                    "include": "#importDots"
                }
            ]
        },
        "importClassName": {
            "begin": "(?<=import\\s|function\\s|[\\w$]\\.)([a-zA-Z_$][\\w$]*|\\*)+(\\.)?(\\*)?",
            "end": "(?=[^\\w$*])",
            "beginCaptures": {
                "0": {
                    "name": "storage.modifier.import.java"
                },
                "2": {
                    "name": "punctuation.separator.drools"
                },
                "3": {
                    "name": "variable.language.wildcard.drools"
                }
            },
            "patterns": [
                {
                    "include": "#importClassName"
                }
            ]
        },
        "ruleBeginning": {
            "begin": "^\\s*rule\\s+",
            "end": "(?=\\bwhen\\b|\\bthen\\b)",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.rule.drools"
                }
            },
            "name": "meta.rule.name.drools",
            "patterns": [
                {
                    "include": "#ruleName"
                },
                {
                    "include": "#ruleAttributes"
                }
            ]
        },
        "ruleName": {
            "begin": "(?<=rule\\s)\\s*(\"(?:[^\"]|\\\")*\")",
            "end": "$",
            "beginCaptures": {
                "1": {
                    "name": "string.quoted.double.drools"
                }
            }
        },
        "ruleAttributes": {
            "patterns": [
                {
                    "match": "\\b(attributes)\\s*:",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        }
                    }
                },
                {
                    "match": "\\b(duration|salience)\\s+(-?\\d+)(?:\\b|\\s*(,))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "constant.numeric.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                },
                {
                    "match": "\\b(agenda-group|activation-group|date-effective|date-expires|dialect|rulefow-group)\\s+(\"(?:[^\"]|\\\")*\")\\s*(,)?",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "string.quoted.double.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                },
                {
                    "match": "\\b(enabled)(?:\\s+(true|false))(?:\\b|\\s*(,))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "constant.language.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                },
                {
                    "match": "\\b(auto-focus|lock-on-active|no-loop)(?:\\s+(true|false))?(?:\\b|\\s*(,))",
                    "captures": {
                        "1": {
                            "name": "keyword.control.attribute.drools"
                        },
                        "2": {
                            "name": "constant.language.drools"
                        },
                        "3": {
                            "name": "punctuation.separator.delimiter.drools"
                        }
                    }
                }
            ]
        },
        "ruleLHS": {
            "begin": "\\b(when)(\\s*:|\\b)",
            "end": "(?=\\bthen\\b)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.rule.drools"
                },
                "2": {
                    "name": "punctuation.definition.drools"
                }
            },
            "name": "meta.rule.lhs.drools",
            "patterns": [
                {
                    "include": "#lhsKeywords"
                },
                {
                    "include": "#lhsIdent"
                },
                {
                    "include": "#strings"
                },
                {
                    "match": "(==|<=|>=|<|>|!=)",
                    "name": "keyword.operator.drools"
                },
                {
                    "match": "(&&|\\|\\|)",
                    "name": "keyword.operator.drools"
                },
                {
                    "match": "\\b(after|before|coincides|during|includes|finishes|finishedby|meets|metby|overlaps|overlappedby|starts|startedby)\\b",
                    "name": "keyword.operator.drools"
                },
                {
                    "match": "#[a-zA-Z$_][\\w$]*",
                    "name": "keyword.operator.drools"
                },
                {
                    "match": "\\b(matches|not matches|contains|not contains|memberOf|not memberOf|soundslike|str|in|notin|,)\\b",
                    "name": "keyword.operator.drools"
                },
                {
                    "match": "(\\*|\\+|-|>>|>>>|<<|instanceof|&|\\^|\\||\\?)",
                    "name": "keyword.operator.drools"
                },
                {
                    "match": "\\b(true|false|null)\\b",
                    "name": "constant.language.drools"
                },
                {
                    "match": ":",
                    "name": "punctuation.definition.drools"
                },
                {
                    "match": "([a-zA-Z_$][\\w$]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.drools"
                        }
                    }
                }
            ]
        },
        "lhsKeywords": {
            "match": "\\b(exists|not|eval|forall|collect|accumulate|from)\\b",
            "name": "keyword.control.lhs.drools"
        },
        "lhsIdent": {
            "match": "([a-zA-Z_$][\\w$]*)\\s*(:)\\s*(?:([A-Z][\\w$]*)\\s*\\()?",
            "captures": {
                "1": {
                    "name": "variable.other.drools"
                },
                "2": {
                    "name": "punctuation.definition.drools"
                },
                "3": {
                    "name": "storage.type.java"
                }
            }
        },
        "ruleRHS": {
            "begin": "\\bthen\\b",
            "end": "\\bend\\b",
            "captures": {
                "0": {
                    "name": "keyword.control.rule.drools"
                }
            },
            "name": "meta.rule.rhs.drools"
        }
    },
    "scopeName": "source.drools",
    "uuid": "a98fc7cc-15d1-401e-bb85-e72714276cdb"
}
