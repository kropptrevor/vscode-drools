{
    "fileTypes": [
        ".drl"
    ],
    "name": "Drools",
    "patterns": [
        {
            "comment": "Mathmatical operators",
            "match": "(<|>|==|<=|>=|!=)",
            "name": "keyword.operator.source.drools"
        },
        {
            "comment": "Boolean operators",
            "match": "(&&|\\|\\|)",
            "name": "keyword.operator.source.drools"
        },
        {
            "comment": "Temporal operators",
            "match": "\\b(after|before|coincides|during|includes|finishes|finishedby|meets|metby|overlaps|overlappedby|starts|startedby)\\b",
            "name": "keyword.operator.source.drools"
        },
        {
            "comment": "Other binary operators",
            "match": "\\b(matches|not matches|contains|not contains|memberOf|not memberOf|soundslike|str|in|notin)\\b",
            "name": "keyword.operator.source.drools"
        },
        {
            "comment": "Java operators",
            "match": "(\\*|\\+|-|>>|>>>|<<|instanceof|&|\\^|\\|)",
            "name": "keyword.operator.source.drools"
        },
        {
            "comment": "Drools RHS functions",
            "match": "\\b(insert|insertLogical|delete|modify)\\b",
            "name": "entity.name.function.source.drools"
        },
        {
            "comment": "Drools hard keywords",
            "match": "\\b(true|false|null)\\b",
            "name": "constant.language.source.drools"
        },
        {
            "comment": "Drools java block",
            "begin": "\\b(then)\\b",
            "end": "\\b(end)\\b",
            "captures": {
                "1": {
                    "name": "keyword.control.source.drools"
                }
            },
            "contentName": "meta.embedded.block.java",
            "patterns": [
                {
                    "include": "source.java"
                }
            ]
        },
        {
            "comment": "Drools function body java",
            "begin": "^\\s*(function)\\b",
            "end": "\\n",
            "captures": {
                "1": {
                    "name": "keyword.control.source.drools"
                }
            },
            "contentName": "meta.embedded.block.java",
            "patterns": [
                {
                    "include": "source.java"
                }
            ]
        },
        {
            "comment": "Drools soft keywords",
            "match": "\\b(lock-on-active|date-effective|date-expires|no-loop|auto-focus|activation-group|agenda-group|ruleflow-group|entry-point|duration|package|import|dialect|salience|enabled|attributes|rule|extends|when|then|template|query|declare|function|global|eval|not|in|or|and|exists|forall|accumulate|collect|from|end|over|calendars|init|action|reverse|result|new)\\b",
            "name": "keyword.control.source.drools"
        },
        {
            "comment": "Bound variables like $person, $myList",
            "match": "\\$([A-Za-z][A-Za-z0-9_]+)",
            "name": "variable.parameter.source.drools"
        },
        {
            "comment": "Java classes",
            "match": "\\b([A-Z][A-Za-z_]+)\\b",
            "name": "support.type.source.drools"
        },
        {
            "comment": "Single line comment",
            "match": "(\\/)(\\/).*",
            "name": "comment.line.double-slash.source.drools"
        },
        {
            "begin": "/\\*",
            "comment": "Multi line comment",
            "end": "\\*/",
            "name": "comment.line.double-slash.source.drools"
        },
        {
            "comment": "Double quote strings",
            "match": "(\"([^\"]|\"\")*\")",
            "name": "string.quoted.double.source.drools"
        },
        {
            "comment": "Numbers",
            "match": "\\b([0-9]+(\\.)?[0-9]*)\\b",
            "name": "constant.numeric.source.drools"
        }
    ],
    "scopeName": "source.drools",
    "uuid": "a98fc7cc-15d1-401e-bb85-e72714276cdb"
}
